/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.43
 * Generated at: 2023-07-09 18:24:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import java.util.List;
import monolitico.com.domain.Materia;

public final class ProfesorForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("monolitico.com.domain.Materia");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write(" \n");
      out.write(" \n");
      out.write("    \n");
      out.write("  ");

     List<Materia> materias = (List<Materia>) request.getAttribute("materias");
  
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"es\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <link href=\"css/styleForm.css\" rel=\"stylesheet\">\n");
      out.write("    <link href=\"css/botons.css\" rel=\"stylesheet\">\n");
      out.write("    <title>Nuevo Registro de Alumno</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div class=\"contenedor-principal\">\n");
      out.write("        <div class=\"cont-text\" style=\"user-select: text\">\n");
      out.write("            <div class=\"div-text\">\n");
      out.write("                <h3>Colegio Colegiales</h3>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"div-text\">\n");
      out.write("                <h3>Nuevo Registro de Profesor</h3>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <form class=\"formulariologin\" action=\"");
      out.print( request.getContextPath() );
      out.write("/agregarProfesor\" method=\"Post\" autocomplete=\"off\">\n");
      out.write("            <div class=\"div-input\">\n");
      out.write("                <input class=\"controls\" type=\"text\" name=\"nombre\" placeholder=\"Nombre Profesor\" required>\n");
      out.write("                <input class=\"controls\" type=\"text\" name=\"apellido\" placeholder=\"Apellido Profesor\" required>\n");
      out.write("                <input class=\"controls\" type=\"number\" name=\"dni\" placeholder=\"DNI Profesor\" required>\n");
      out.write("                <select class=\"controls\" name=\"materiaId\" required>\n");
      out.write("                \t<option selected disabled> Selecciona la Materia </option>\n");
      out.write("               \t");
 for (int i = 0; i < materias.size(); i++) { 
      out.write("\n");
      out.write(" \t\t\t\t\t<option value=\"");
      out.print( materias.get(i).getId_materia());
      out.write('"');
      out.write('>');
      out.write(' ');
      out.print(materias.get(i).getNombre());
      out.write("</option>\n");
      out.write("             \t");
}
      out.write(" \n");
      out.write("\t\t\t\t</select>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"div-apoyo\" style=\"user-select: text\">\n");
      out.write("                <a type=\"button\" class=\"botones\" id=\"botonVolver\" href=\"");
      out.print(request.getContextPath());
      out.write("/TablaProfesorMateria\">Volver</a>\n");
      out.write("                <button class=\"botones\">Guardar</button>\n");
      out.write("            </div>\n");
      out.write("        </form>\n");
      out.write("    </div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
